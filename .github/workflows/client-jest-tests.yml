name: Client Jest Unit Tests

on:
  push:
    branches: [main, master]
    paths:
      - "client/**"
  pull_request:
    branches: [main, master]
    paths:
      - "client/**"
  workflow_dispatch:

# Add permissions configuration
permissions:
  checks: write
  contents: read
  pull-requests: write

jobs:
  coverage:
    name: "Jest Unit Tests"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    defaults:
      run:
        working-directory: ./client
        
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: "8.15.4"
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Install required system packages
        run: sudo apt-get update && sudo apt-get install -y bc

      - name: Build the app
        run: pnpm build
        env:
          CI: true

      - name: Run tests with coverage
        run: pnpm test:coverage:ci
        env:
          CI: true

      - name: Check coverage threshold
        run: |
          # Check if the coverage/lcov.info file exists, which is standard for Jest
          if [ ! -f "coverage/lcov.info" ]; then
            echo "Coverage file not found: coverage/lcov.info"
            exit 1
          fi

          # Use lcov-summary to calculate the coverage percentage from lcov.info
          COVERAGE_SUMMARY=$(npx lcov-summary coverage/lcov.info)
          COVERAGE=$(echo "$COVERAGE_SUMMARY" | grep -A1 "Total Coverage:" | tail -n1 | grep -oP '[0-9.]+(?=%)')

          echo "Coverage percentage: $COVERAGE%"

          # Check if coverage meets the 80% threshold
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "::error::Test coverage is below 80% (actual: $COVERAGE%)"
            exit 1
          fi

          echo "::notice::Test coverage meets the 80% threshold (actual: $COVERAGE%)"

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: client/coverage/
          retention-days: 30

      - name: Publish Coverage Report as PR Comment
        if: github.event_name == 'pull_request'
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          lcov-file: ./client/coverage/lcov.info
          github-token: ${{ secrets.GITHUB_TOKEN }}
          title: "Test Coverage Report" 