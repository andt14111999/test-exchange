name: RSpec Tests

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  rspec:
    name: RSpec
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
      POSTGRES_HOST: localhost
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      CI: true
      DEVISE_JWT_SECRET_KEY: "dummy_key_for_ci_testing_only_123456789"
      REDIS_URL: redis://localhost:6379/0
      COVERAGE: true
      EXCHANGE_SIGNING_KEY: "dummy_signing_key_for_ci_testing_only_123456789"
      COIN_PORTAL_VERIFYING_KEY: "dummy_verifying_key_for_ci_testing_only_123456789"
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: snowfox_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: true
      - name: Install dependencies
        run: bundle install
      - name: Setup Database
        run: |
          cp config/database.yml.ci config/database.yml
          bundle exec rails db:create db:schema:load
      - name: Run tests
        run: bundle exec rspec
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: coverage/
          retention-days: 7
